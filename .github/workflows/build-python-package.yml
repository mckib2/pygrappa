# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Lint with flake8
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-line-length=127 --statistics
    - name: Create/install local wheel
      run: |
        python -m pip install build
        if [ "$RUNNER_OS" -ne "Windows" ]; then
          python -m build --wheel .
        else
          # install all build dependencies
          python -m pip install meson ninja Cython numpy scipy mesonpep517
          
          # patch mesonpep517
          python patch_mesonpep517.py
          
          # build wheel using patched dependencies
          python -m build --no-isolation --wheel .
        fi
        python -m pip install dist/*.whl
    - name: Test with pytest
      run: |
        python -m pip install pytest numpy scipy scikit-image tqdm phantominator
        mkdir tmp && cd tmp
        python -m pygrappa.run_tests
